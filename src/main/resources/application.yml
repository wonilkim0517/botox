spring:
  cache:
    type: redis
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
  jpa:
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

jwt:
  issuer: ${JWT_ISSUER}
  secretKey: ${JWT_SECRET_KEY}

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100

logging:
  config: classpath:logback.xml
  level:
    test: warn
    org.springframework: DEBUG
    org.hibernate.SQL: info
    org.hibernate.type: trace
    org.springframework.orm.jpa: DEBUG
    org.springframework.transaction: DEBUG

jwt:
  issuer: ${JWT_ISSUER}
  secretKey: ${JWT_SECRET_KEY}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: botox-s3
    stack:
      auto: false

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        default_batch_fetch_size: 100
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}

logging:
  level:
    org.hibernate.SQL: info
    org.hibernate.type: trace
    org.springframework.orm.jpa: DEBUG
    org.springframework.transaction: DEBUG
    root: INFO
    org.springframework: DEBUG

jwt:
  issuer: ${JWT_ISSUER}
  secretKey: ${JWT_SECRET_KEY}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: botox-s3
    stack:
      auto: false
